@startuml

class DeformationModel 
{
    sourceCrs: CrsDefinition
    targetCrs: CrsDefinition
    interpolationCrs: CrsDefinition

}
DeformationModel "1" o-- "many" DeformationComponent
DeformationModel o-- DiscoveryMetadata
DeformationModel "1" o-- "3" CrsDefinition

class DiscoveryMetadata
{

}

class CrsDefinition
{
    name: characterString
    uri: characterString
    wkt: characterString
}


class DeformationComponent
{
    spatialModel: SpatialModel
    timeFunction: TimeFunction
}
DeformationComponent o-- SpatialModel
DeformationComponent o-- TimeFunction

class SpatialModel
{
    spatialModelType: characterString
    spatialModelExtent: SpatialExtent
    parameters: characterString[]
    defaultHorizontalUncertainty: real
    defaultVerticalUncertainty: real
}

class GriddedSpatialModel
{
    interpolationMethod: characterString

}
SpatialModel <|-- GriddedSpatialModel

class Grid
{
    parentGrid: Grid
    iNodeMaximum: integer
    jNodeMaximum: integer
    gridTransformation: AffineTransformation
    noDataValue: ?
    gridData: real[][][]
}
GriddedSpatialModel "1" *-- "many" Grid
Grid *-- Grid : parent

class AffineTransformation
{
    affineCoeffs: real[]
}
Grid o-- AffineTransformation

SpatialModel o-- SpatialExtent

class SpatialExtent
{
    extentType: characterString
}
SpatialExtent <|-- BoundingBoxExtent

class BoundingBoxExtent
{
    southBoundLatitude: real
    westBoundLongitude: real
    northBoundLatitude: real
    eastBoundLongitude: real
}

class TimeFunction
{
    baseFunctions: BaseTimeFunction[]
}

abstract class BaseTimeFunction
{
}
TimeFunction "1" *-- "many" BaseTimeFunction

class VelocityTimeFunction
{
    referenceEpoch: date
}
BaseTimeFunction <|-- VelocityTimeFunction
/'
class StepTimeFunction
{
    referenceEpoch: date

}
BaseTimeFunction <|-- StepTimeFunction

class ReverseStepTimeFunction
{
    referenceEpoch: date
}
BaseTimeFunction <|-- ReverseStepTimeFunction
'/

class PiecewiseLinearTimeFunction
{
epochMultipliers: EpochMultiplier[]

}
BaseTimeFunction <|-- PiecewiseLinearTimeFunction

class EpochMultiplier
{
    epoch: date
    multiplier: real
}
PiecewiseLinearTimeFunction "1" *-- "many" EpochMultiplier

class ExponentialTimeFunction
{
    referenceEpoch: date
    referenceMultplier: real
    decayRate: real
    endEpoch (optional): date
}
BaseTimeFunction <|-- ExponentialTimeFunction

class LogarithmicTimeFunction
{
    referenceEpoch: date
    scaleFactor: real
    timeFactor: real
    endEpoch (optional): date
}
BaseTimeFunction <|-- LogarithmicTimeFunction

class AccelerationTimeModel
{
    referenceEpoch: date
    accelerationMultiplier: real
    startEpoch (optional): date
    endEpoch (optional): date
}

BaseTimeFunction <|-- AccelerationTimeModel

class CyclicTimeFunction
{
    referenceEpoch: date
    frequency: integer?
    cosineMultiplier: real
    sineMultiplier: real
}
BaseTimeFunction <|-- CyclicTimeFunction


@enduml 
